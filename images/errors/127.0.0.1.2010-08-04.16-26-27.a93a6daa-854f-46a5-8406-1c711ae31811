(dp1
S'output'
p2
S''
sS'layer'
p3
S'C:\\Users\\Pedro\\Downloads\\web2py\\applications\\images/views\\appadmin.html'
p4
sS'code'
p5
S'response.write(\'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\\n<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="\',escape=False)\nresponse.write(T.accepted_language or \'en\')\nresponse.write(\'">\\n  <head>\\n    <title>\',escape=False)\nresponse.write(response.title or request.application)\nresponse.write(\'</title>\\n    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />\\n    \',escape=False)\n#------  require CSS and JS files for this page (read info in base.css) ------\nresponse.write(\'\\n    \',escape=False)\nresponse.files.append(URL(request.application,\'static\',\'base.css\'))\nresponse.write(\'\\n    \',escape=False)\nresponse.files.append(URL(request.application,\'static\',\'superfish.js\'))\nresponse.write(\'\\n    \',escape=False)\n#------ include web2py specific js code (jquery, calendar, form stuff) ------\nresponse.write(\'\\n    \',escape=False)\nresponse.files.insert(0,URL(r=request,c=\'static\',f=\'jquery.js\'))\nresponse.files.insert(1,URL(r=request,c=\'static\',f=\'calendar.css\'))\nresponse.files.insert(2,URL(r=request,c=\'static\',f=\'calendar.js\'))\nfor _item in response.meta or []:\n    response.write(\'\\n     <meta name="\',escape=False)\n    response.write(_item)\n    response.write(\'" content="\',escape=False)\n    response.write(response.meta[_item])\n    response.write(\'" />\',escape=False)\n    pass\nfor _k,_file in enumerate(response.files or []):\n    if _file in response.files[:_k]:\n        continue\n    elif _file[-4:].lower()==\'.css\':\n        response.write(\'\\n     <link href="\',escape=False)\n        response.write(_file)\n        response.write(\'" rel="stylesheet" type="text/css" />\',escape=False)\n    elif _file[-3:].lower()==\'.js\':\n        response.write(\'\\n     <script src="\',escape=False)\n        response.write(_file)\n        response.write(\'" type="text/javascript"></script>\',escape=False)\n        pass\n    pass\nresponse.write(\'\\n<script type="text/javascript"><!--\\nfunction popup(url) {\\n  newwindow=window.open(url,\\\'name\\\',\\\'height=400,width=600\\\');\\n  if (window.focus) newwindow.focus();\\n  return false;\\n}\\nfunction collapse(id) { jQuery(\\\'#\\\'+id).slideToggle(); }\\nfunction fade(id,value) { if(value>0) jQuery(\\\'#\\\'+id).hide().fadeIn(\\\'slow\\\'); else jQuery(\\\'#\\\'+id).show().fadeOut(\\\'slow\\\'); }\\nfunction ajax(u,s,t) {\\n    query = \\\'\\\';\\n    if (typeof s == "string") {\\n        d = jQuery(s).serialize();\\n        if(d){ query = d; }\\n    } else {\\n        pcs = [];\\n        for(i=0; i<s.length; i++) {\\n            q = jQuery("#"+s[i]).serialize();\\n            if(q){pcs.push(q);}\\n        }\\n        if (pcs.length>0){query = pcs.join("&");}\\n    }\\n    jQuery.ajax({type: "POST", url: u, data: query, success: function(msg) { if(t) { if(t==\\\':eval\\\') eval(msg); else jQuery("#" + t).html(msg); } } }); \\n}\\nString.prototype.reverse = function () { return this.split(\\\'\\\').reverse().join(\\\'\\\');};\\nfunction web2py_ajax_init() {\\n  jQuery(\\\'.hidden\\\').hide();\\n  jQuery(\\\'.error\\\').hide().slideDown(\\\'slow\\\');\\n  jQuery(\\\'.flash\\\').click(function() { jQuery(this).fadeOut(\\\'slow\\\'); return false; });\\n  jQuery(\\\'input.integer\\\').keyup(function(){this.value=this.value.reverse().replace(/[^0-9\\\\-]|\\\\-(?=.)/g,\\\'\\\').reverse();});\\n  jQuery(\\\'input.double\\\').keyup(function(){this.value=this.value.reverse().replace(/[^0-9\\\\-\\\\.]|[\\\\-](?=.)|[\\\\.](?=[0-9]*[\\\\.])/g,\\\'\\\').reverse();});\\n  jQuery("input[type=\\\'checkbox\\\'].delete").each(function(){jQuery(this).click(function() { if(this.checked) if(!confirm("\',escape=False)\nresponse.write(T(\'Sure you want to delete this object?\'))\nresponse.write(\'")) this.checked=false; });});\\n  try {jQuery("input.date").focus( function() {Calendar.setup({\\n     inputField:this.id, ifFormat:"\',escape=False)\nresponse.write(T(\'%Y-%m-%d\'))\nresponse.write(\'", showsTime:false\\n  }); }); } catch(e) {};\\n  try { jQuery("input.datetime").focus( function() {Calendar.setup({\\n     inputField:this.id, ifFormat:"\',escape=False)\nresponse.write(T(\'%Y-%m-%d %H:%M:%S\'))\nresponse.write(\'", showsTime: true,timeFormat: "24"\\n  }); }); } catch(e) {};\\n  try { jQuery("input.time").clockpick({\\n      starthour:0, endhour:23, showminutes:true, military:true\\n  }); } catch(e) {};\\n};\\njQuery(document).ready(function(){\\n   jQuery(\\\'.flash\\\').hide();\\n   if(jQuery(\\\'.flash\\\').html()!=\\\'\\\') jQuery(\\\'.flash\\\').slideDown(\\\'slow\\\');\\n   web2py_ajax_init();});\\n\\nfunction web2py_trap_form(action,target) {\\n   jQuery(\\\'#\\\'+target+\\\' form\\\').each(function(i){\\n      var form=jQuery(this);\\n      if(!form.hasClass(\\\'no_trap\\\'))\\n        form.submit(function(obj){\\n         jQuery(\\\'.flash\\\').hide().html(\\\'\\\');\\n         web2py_ajax_page(\\\'post\\\',action,form.serialize(),target);\\n         return false;\\n      });\\n   });\\n}\\n\\nfunction web2py_ajax_page(method,action,data,target) {\\n  jQuery.ajax({\\\'type\\\':method,\\\'url\\\':action,\\\'data\\\':data,\\n    \\\'beforeSend\\\':function(xhr){\\n      xhr.setRequestHeader(\\\'web2py-component-location\\\',document.location);\\n      xhr.setRequestHeader(\\\'web2py-component-element\\\',target);},\\n    \\\'complete\\\':function(xhr,text){\\n      command=xhr.getResponseHeader(\\\'web2py-component-command\\\');\\n      if(command) eval(command);\\n      flash=xhr.getResponseHeader(\\\'web2py-component-flash\\\');\\n      if(flash) jQuery(\\\'.flash\\\').html(flash).slideDown();\\n      },\\n    \\\'success\\\': function(text) {\\n      jQuery(\\\'#\\\'+target).html(text);\\n      web2py_trap_form(action,target);\\n      web2py_ajax_init();\\n      }\\n    });\\n}\\nfunction web2py_component(action,target) {\\n    jQuery(document).ready(function(){ web2py_ajax_page(\\\'get\\\',action,null,target); });\\n}\\n//--></script>\\n\\n  </head>\\n  <body>\\n    <div class="flash">\',escape=False)\nresponse.write(response.flash or \'\')\nresponse.write(\'</div>\\n    <div class="ez-mr wrapper" id="layout">\\n      \',escape=False)\n#------ Layout 3 from http://www.ez-css.org/layouts ------\nresponse.write(\'\\n      <div class="ez-wr">\\n\\t<div class="ez-box" id="header">\\n\\t  \',escape=False)\nresponse.write(auth.navbar(action=URL(request.application,\'default\',\'user\')))\nresponse.write(\'\\n          <h1>\\n            <a href="">\',escape=False)\nresponse.write(response.title or \'response.title\')\nresponse.write(\'</a>\\n          </h1>            \\n          <h2>\\n\\t    \',escape=False)\nresponse.write(response.subtitle or \'response.subtitle\')\nresponse.write(\'\\n\\t  </h2>\\n\\t</div>\\n\\t<div class="ez-box" id="statusbar">\\n\\t  \',escape=False)\n#------ superfish menu ------\nresponse.write(\'\\n\\t  \',escape=False)\nresponse.write(MENU(response.menu,_class=\'sf-menu\'))\nresponse.write(\'\\n          <script>\\n\\t    jQuery(document).ready(function(){\\n              jQuery(\\\'ul.sf-menu\\\').superfish({delay:400});});\\n\\t  </script>\\n\\t</div>\\n\\t<div class="ez-wr">\\n\\t  <div class="ez-fl ez-negmx">\\n            <div class="ez-box" id="left_sidebar">\',escape=False)\n#------ unused space\nresponse.write(\'</div>\\n\\t  </div>\\n\\t  <div class="ez-fl ez-negmr">\\n            <div class="ez-box" id="content">\\n<script><!--\\njQuery(document).ready(function(){\\n  jQuery("table.sortable tbody tr").mouseover( function() {\\n     jQuery(this).addClass("highlight"); }).mouseout( function() { \\n     jQuery(this).removeClass("highlight"); });\\n  jQuery(\\\'table.sortable tbody tr:odd\\\').addClass(\\\'odd\\\');\\n  jQuery(\\\'table.sortable tbody tr:even\\\').addClass(\\\'even\\\');\\n});\\n//--></script>\\n\\n\',escape=False)\nif request.function==\'index\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(T("Available databases and tables"))\n    response.write(\'</h1>\\n  \',escape=False)\n    if not databases:\n        response.write(\'\',escape=False)\n        response.write(T("No databases in this application"))\n        response.write(\'\',escape=False)\n        pass\n    response.write(\'\\n  \',escape=False)\n    for db in sorted(databases):\n        response.write(\'\\n    \',escape=False)\n        for table in databases[db].tables:\n            response.write(\'\\n      \',escape=False)\n            qry=\'%s.%s.id>0\'%(db,table)\n            response.write(\'\\n      \',escape=False)\n            tbl=databases[db][table]\n            response.write(\'\\n      \',escape=False)\n            if hasattr(tbl,\'_primarykey\'):\n                response.write(\'\\n        \',escape=False)\n                if tbl._primarykey:\n                    response.write(\'\\n            \',escape=False)\n                    firstkey=tbl[tbl._primarykey[0]]\n                    response.write(\'\\n            \',escape=False)\n                    if firstkey.type in [\'string\',\'text\']:\n                        response.write(\'\\n              \',escape=False)\n                        qry=\'%s.%s.%s!=""\'%(db,table,firstkey.name)\n                        response.write(\'\\n            \',escape=False)\n                    else:\n                        response.write(\'\\n              \',escape=False)\n                        qry=\'%s.%s.%s>0\'%(db,table,firstkey.name)\n                        response.write(\'\\n            \',escape=False)\n                        pass\n                    response.write(\'\\n        \',escape=False)\n                else:\n                    response.write(\'\\n             \',escape=False)\n                    qry=\'\'\n                    response.write(\'\\n             \',escape=False)\n                    pass\n                response.write(\'\\n      \',escape=False)\n                pass\n            response.write(\'\\n      <h2>\',escape=False)\n            response.write(A("%s.%s" % (db,table),_href=URL(r=request,f=\'select\',args=[db],vars=dict(query=qry))))\n            response.write(\'\\n</h2>\\n      [ \',escape=False)\n            response.write(A(str(T(\'insert new\'))+\'\'+table,_href=URL(r=request,f=\'insert\',args=[db,table])))\n            response.write(\' ]\\n    <br /><br />\\n    \',escape=False)\n            pass\n        response.write(\'\\n  \',escape=False)\n        pass\n    response.write(\'\\n\\n\',escape=False)\nelif request.function==\'select\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(XML(str(T("database %s select"))%A(request.args[0],_href=URL(r=request,f=\'index\'))) )\n    response.write(\'\\n  </h1>\\n   \',escape=False)\n    if table:\n        response.write(\'\\n  [ \',escape=False)\n        response.write(A(str(T(\'insert new %s\'))%table,_href=URL(r=request,f=\'insert\',args=[request.args[0],table])))\n        response.write(\' ]<br/><br/>\\n    <h2>\',escape=False)\n        response.write(T("Rows in table"))\n        response.write(\'</h2><br/>\\n   \',escape=False)\n    else:\n        response.write(\'\\n    <h2>\',escape=False)\n        response.write(T("Rows selected"))\n        response.write(\'</h2><br/>\\n   \',escape=False)\n        pass\n    response.write(\'\\n   \',escape=False)\n    response.write(form)\n    response.write(\'\\n   <p>\',escape=False)\n    response.write(T(\'The "query" is a condition like "db.table1.field1==\\\'value\\\'". Something like "db.table1.field1==db.table2.field2" results in a SQL JOIN.\'))\n    response.write(\'<br/>\\n      \',escape=False)\n    response.write(T(\'Use (...)&(...) for AND, (...)|(...) for OR, and ~(...)  for NOT to build more complex queries.\'))\n    response.write(\'<br/>\\n      \',escape=False)\n    response.write(T(\'"update" is an optional expression like "field1=\\\'newvalue\\\'". You cannot update or delete the results of a JOIN\'))\n    response.write(\'</p>\\n    <br/><br/>\\n    <h3>\',escape=False)\n    response.write(nrows)\n    response.write(\' \',escape=False)\n    response.write(T("selected"))\n    response.write(\'</h3>\\n    \',escape=False)\n    if start>0:\n        response.write(\'[ \',escape=False)\n        response.write(A(T(\'previous 100 rows\'),_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(start=start-100))))\n        response.write(\' ]\',escape=False)\n        pass\n    response.write(\'\\n    \',escape=False)\n    if stop<nrows:\n        response.write(\'[ \',escape=False)\n        response.write(A(T(\'next 100 rows\'),_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(start=start+100))))\n        response.write(\' ]\',escape=False)\n        pass\n    response.write(\'    \\n    \',escape=False)\n    if rows:\n        response.write(\'\\n       <div style="overflow: auto;" width="80%">\\n       \',escape=False)\n        linkto=URL(r=request,f=\'update\',args=request.args[0])\n        response.write(\'\\n       \',escape=False)\n        upload=URL(r=request,f=\'download\',args=request.args[0])\n        response.write(\'    \\n       \',escape=False)\n        response.write(SQLTABLE(rows,linkto,upload,orderby=True,_class=\'sortable\'))\n        response.write(\'\\n       </div>\\n    \',escape=False)\n        pass\n    response.write(\'\\n    <br/><br/><h2>\',escape=False)\n    response.write(T("Import/Export"))\n    response.write(\'</h2><br/>\\n    [ <a href="\',escape=False)\n    response.write(URL(r=request,f=\'csv\',args=request.args[0],vars=dict(query=query)))\n    response.write(\'">\',escape=False)\n    response.write(T("export as csv file"))\n    response.write(\'</a> ]\\n  \',escape=False)\n    if table:\n        response.write(\'\\n    \',escape=False)\n        response.write(FORM(str(T(\'or import from csv file\'))+" ",INPUT(_type=\'file\',_name=\'csvfile\'),INPUT(_type=\'hidden\',_value=table,_name=\'table\'),INPUT(_type=\'submit\',_value=\'import\')))\n        response.write(\'\\n  \',escape=False)\n        pass\n    response.write(\'\\n\\n\\n\',escape=False)\nelif request.function==\'insert\':\n    response.write(\'  \\n  <h1>\',escape=False)\n    response.write(T("database"))\n    response.write(\' \',escape=False)\n    response.write(A(request.args[0],_href=URL(r=request,f=\'index\')))\n    response.write(\'\\n    \',escape=False)\n    if hasattr(table,\'_primarykey\'):\n        response.write(\'\\n      \',escape=False)\n        fieldname=table._primarykey[0]\n        response.write(\'\\n      \',escape=False)\n        dbname=request.args[0]\n        response.write(\'\\n      \',escape=False)\n        tablename=request.args[1]\n        response.write(\'\\n      \',escape=False)\n        cond = table[fieldname].type in [\'string\',\'text\'] and \'!=""\' or \'>0\'\n        response.write(\'\\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(tablename,_href=URL(r=request,f=\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond)))))\n        response.write(\'\\n    \',escape=False)\n    else:\n        response.write(\'  \\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(request.args[1],_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n        response.write(\'\\n    \',escape=False)\n        pass\n    response.write(\'\\n  </h1>\\n  <h2>\',escape=False)\n    response.write(T("New Record"))\n    response.write(\'</h2><br/>\\n  \',escape=False)\n    response.write(form)\n    response.write(\'\\n\\n\\n\\n\',escape=False)\nelif request.function==\'update\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(T("database"))\n    response.write(\' \',escape=False)\n    response.write(A(request.args[0],_href=URL(r=request,f=\'index\')))\n    response.write(\'\\n    \',escape=False)\n    if hasattr(table,\'_primarykey\'):\n        response.write(\'\\n      \',escape=False)\n        fieldname=request.vars.keys()[0]\n        response.write(\'\\n      \',escape=False)\n        dbname=request.args[0]\n        response.write(\'\\n      \',escape=False)\n        tablename=request.args[1]\n        response.write(\'\\n      \',escape=False)\n        cond = table[fieldname].type in [\'string\',\'text\'] and \'!=""\' or \'>0\'\n        response.write(\'      \\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(tablename,_href=URL(r=request,f=\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond)))))\n        response.write(\'\\n      \',escape=False)\n        response.write(T("record"))\n        response.write(\' \',escape=False)\n        response.write(A(\'%s=%s\'%request.vars.items()[0],_href=URL(r=request,f=\'update\',args=request.args[:2],vars=request.vars)))\n        response.write(\'\\n    \',escape=False)\n    else:\n        response.write(\'\\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(request.args[1],_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n        response.write(\'\\n      \',escape=False)\n        response.write(T("record id"))\n        response.write(\' \',escape=False)\n        response.write(A(request.args[2],_href=URL(r=request,f=\'update\',args=request.args[:3])))\n        response.write(\'\\n    \',escape=False)\n        pass\n    response.write(\'\\n  </h1>\\n  <h2>\',escape=False)\n    response.write(T("Edit current record"))\n    response.write(\'</h2><br/><br/>\',escape=False)\n    response.write(form)\n    response.write(\'\\n\\n\\n\\n\',escape=False)\nelif request.function==\'state\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(T("Internal State"))\n    response.write(\'</h1>\\n  <h2>\',escape=False)\n    response.write(T("Current request"))\n    response.write(\'</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(request))\n    response.write(\'\\n  <br/><h2>\',escape=False)\n    response.write(T("Current response"))\n    response.write(\'</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(response))\n    response.write(\'\\n  <br/><h2>\',escape=False)\n    response.write(T("Current session"))\n    response.write(\'</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(session))\n    response.write(\'\\n\\n\\n\',escape=False)\nelif request.function == \'ccache\':\n    response.write(\'\\n<h2>Cache</h2>\\n<div class="wrapper">\\n<div class="list">\\n    <div class="list-header">\\n        Statistics\\n    </div>\\n    <div class="content">\\n        <h3>Overview</h3>\\n        <p>\\n            Hit Ratio: \\n            <strong>\',escape=False)\n    response.write(total[\'ratio\'])\n    response.write(\'%</strong> \\n            (<strong>\',escape=False)\n    response.write(total[\'hits\'])\n    response.write(\'</strong> hits \\n            and <strong>\',escape=False)\n    response.write(total[\'misses\'])\n    response.write(\'</strong> misses)\\n        </p>\\n        <p>\\n            Size of cache: \\n            <strong>\',escape=False)\n    response.write(total[\'objects\'])\n    response.write(\'</strong> items, \\n            <strong>\',escape=False)\n    response.write(total[\'bytes\'])\n    response.write(\'</strong> bytes \\n            \',escape=False)\n    if total[\'bytes\'] > 524287:\n        response.write(\'\\n                (<strong>\',escape=False)\n        response.write("%.0d" % (total[\'bytes\'] / 1048576))\n        response.write(\' MB</strong>)\\n            \',escape=False)\n        pass\n    response.write(\'\\n        </p>\\n        <p>\\n            Cache contains items up to \\n            <strong>\',escape=False)\n    response.write("%02d" % total[\'oldest\'][0])\n    response.write(\'</strong> hours \\n            <strong>\',escape=False)\n    response.write("%02d" % total[\'oldest\'][1])\n    response.write(\'</strong> minutes \\n            <strong>\',escape=False)\n    response.write("%02d" % total[\'oldest\'][2])\n    response.write(\'</strong> seconds old.\\n        </p>\\n        <h3>RAM</h3>\\n        <p>\\n            Hit Ratio: \\n            <strong>\',escape=False)\n    response.write(ram[\'ratio\'])\n    response.write(\'%</strong> \\n            (<strong>\',escape=False)\n    response.write(ram[\'hits\'])\n    response.write(\'</strong> hits \\n            and <strong>\',escape=False)\n    response.write(ram[\'misses\'])\n    response.write(\'</strong> misses)\\n        </p>\\n        <p>\\n            Size of cache: \\n            <strong>\',escape=False)\n    response.write(ram[\'objects\'])\n    response.write(\'</strong> items, \\n            <strong>\',escape=False)\n    response.write(ram[\'bytes\'])\n    response.write(\'</strong> bytes \\n            \',escape=False)\n    if ram[\'bytes\'] > 524287:\n        response.write(\'\\n                (<strong>\',escape=False)\n        response.write(ram[\'bytes\'] / 1048576)\n        response.write(\' MB</strong>)\\n            \',escape=False)\n        pass\n    response.write(\'\\n        </p>\\n        <p>\\n            RAM contains items up to \\n            <strong>\',escape=False)\n    response.write("%02d" % ram[\'oldest\'][0])\n    response.write(\'</strong> hours \\n            <strong>\',escape=False)\n    response.write("%02d" % ram[\'oldest\'][1])\n    response.write(\'</strong> minutes \\n            <strong>\',escape=False)\n    response.write("%02d" % ram[\'oldest\'][2])\n    response.write(\'</strong> seconds old.\\n        </p>\\n        <h3>DISK</h3>\\n        <p>\\n            Hit Ratio: \\n            <strong>\',escape=False)\n    response.write(disk[\'ratio\'])\n    response.write(\'%</strong> \\n            (<strong>\',escape=False)\n    response.write(disk[\'hits\'])\n    response.write(\'</strong> hits \\n            and <strong>\',escape=False)\n    response.write(disk[\'misses\'])\n    response.write(\'</strong> misses)\\n        </p>\\n        <p>\\n            Size of cache: \\n            <strong>\',escape=False)\n    response.write(disk[\'objects\'])\n    response.write(\'</strong> items, \\n            <strong>\',escape=False)\n    response.write(disk[\'bytes\'])\n    response.write(\'</strong> bytes \\n            \',escape=False)\n    if disk[\'bytes\'] > 524287:\n        response.write(\'\\n                (<strong>\',escape=False)\n        response.write(disk[\'bytes\'] / 1048576)\n        response.write(\' MB</strong>)\\n            \',escape=False)\n        pass\n    response.write(\'\\n        </p>\\n        <p>\\n            DISK contains items up to \\n            <strong>\',escape=False)\n    response.write("%02d" % disk[\'oldest\'][0])\n    response.write(\'</strong> hours \\n            <strong>\',escape=False)\n    response.write("%02d" % disk[\'oldest\'][1])\n    response.write(\'</strong> minutes \\n            <strong>\',escape=False)\n    response.write("%02d" % disk[\'oldest\'][2])\n    response.write(\'</strong> seconds old.\\n        </p>\\n    </div>\\n    \\n    <div class="list-header">\\n    Manage Cache\\n    </div>\\n    <div class="content">\\n    <p>\\n        \',escape=False)\n    response.write(form)\n    response.write(\'\\n    </p>\\n    </div>\\n</div>\\n<div class="clear"></div>\\n</div>\\n\',escape=False)\n    pass\nresponse.write(\'\\n</div>\\n\\t  </div>\\n\\t  <div class="ez-last ez-oh">\\n            <div class="ez-box" id="right_sidebar">\',escape=False)\n#------ unused space\nresponse.write(\'</div>\\n\\t  </div>\\n\\t</div>\\n\\t<div class="ez-box" id="footer">\\n          \',escape=False)\nresponse.write(T(\'Copyright\'))\nresponse.write(\' &#169; 2010 -\\n          \',escape=False)\nresponse.write(T(\'Powered by\'))\nresponse.write(\' <a href="http://www.web2py.com">web2py</a>\\n\\t</div>\\n      </div>\\n    </div>\\n  </body>\\n</html>\\n\',escape=False)'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "gluon/restricted.py", line 178, in restricted\n  File "C:\\Users\\Pedro\\Downloads\\web2py\\applications\\images/views\\appadmin.html", line 48, in <module>\nNameError: name \'auth\' is not defined\n'
p8
s.